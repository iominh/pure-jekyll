.highlight {
  background: #ffffff; }

.highlight .c {
  color: #999988;
  font-style: italic; }

/* Comment */
.highlight .err {
  color: #a61717;
  background-color: #e3d2d2; }

/* Error */
.highlight .k {
  font-weight: bold; }

/* Keyword */
.highlight .o {
  font-weight: bold; }

/* Operator */
.highlight .cm {
  color: #999988;
  font-style: italic; }

/* Comment.Multiline */
.highlight .cp {
  color: #999999;
  font-weight: bold; }

/* Comment.Preproc */
.highlight .c1 {
  color: #999988;
  font-style: italic; }

/* Comment.Single */
.highlight .cs {
  color: #999999;
  font-weight: bold;
  font-style: italic; }

/* Comment.Special */
.highlight .gd {
  color: #000000;
  background-color: #ffdddd; }

/* Generic.Deleted */
.highlight .gd .x {
  color: #000000;
  background-color: #ffaaaa; }

/* Generic.Deleted.Specific */
.highlight .ge {
  font-style: italic; }

/* Generic.Emph */
.highlight .gr {
  color: #aa0000; }

/* Generic.Error */
.highlight .gh {
  color: #999999; }

/* Generic.Heading */
.highlight .gi {
  color: #000000;
  background-color: #ddffdd; }

/* Generic.Inserted */
.highlight .gi .x {
  color: #000000;
  background-color: #aaffaa; }

/* Generic.Inserted.Specific */
.highlight .go {
  color: #888888; }

/* Generic.Output */
.highlight .gp {
  color: #555555; }

/* Generic.Prompt */
.highlight .gs {
  font-weight: bold; }

/* Generic.Strong */
.highlight .gu {
  color: #aaaaaa; }

/* Generic.Subheading */
.highlight .gt {
  color: #aa0000; }

/* Generic.Traceback */
.highlight .kc {
  font-weight: bold; }

/* Keyword.Constant */
.highlight .kd {
  font-weight: bold; }

/* Keyword.Declaration */
.highlight .kp {
  font-weight: bold; }

/* Keyword.Pseudo */
.highlight .kr {
  font-weight: bold; }

/* Keyword.Reserved */
.highlight .kt {
  color: #445588;
  font-weight: bold; }

/* Keyword.Type */
.highlight .m {
  color: #009999; }

/* Literal.Number */
.highlight .s {
  color: #d14; }

/* Literal.String */
.highlight .na {
  color: #008080; }

/* Name.Attribute */
.highlight .nb {
  color: #0086B3; }

/* Name.Builtin */
.highlight .nc {
  color: #445588;
  font-weight: bold; }

/* Name.Class */
.highlight .no {
  color: #008080; }

/* Name.Constant */
.highlight .ni {
  color: #800080; }

/* Name.Entity */
.highlight .ne {
  color: #990000;
  font-weight: bold; }

/* Name.Exception */
.highlight .nf {
  color: #990000;
  font-weight: bold; }

/* Name.Function */
.highlight .nn {
  color: #555555; }

/* Name.Namespace */
.highlight .nt {
  color: #000080; }

/* Name.Tag */
.highlight .nv {
  color: #008080; }

/* Name.Variable */
.highlight .ow {
  font-weight: bold; }

/* Operator.Word */
.highlight .w {
  color: #bbbbbb; }

/* Text.Whitespace */
.highlight .mf {
  color: #009999; }

/* Literal.Number.Float */
.highlight .mh {
  color: #009999; }

/* Literal.Number.Hex */
.highlight .mi {
  color: #009999; }

/* Literal.Number.Integer */
.highlight .mo {
  color: #009999; }

/* Literal.Number.Oct */
.highlight .sb {
  color: #d14; }

/* Literal.String.Backtick */
.highlight .sc {
  color: #d14; }

/* Literal.String.Char */
.highlight .sd {
  color: #d14; }

/* Literal.String.Doc */
.highlight .s2 {
  color: #d14; }

/* Literal.String.Double */
.highlight .se {
  color: #d14; }

/* Literal.String.Escape */
.highlight .sh {
  color: #d14; }

/* Literal.String.Heredoc */
.highlight .si {
  color: #d14; }

/* Literal.String.Interpol */
.highlight .sx {
  color: #d14; }

/* Literal.String.Other */
.highlight .sr {
  color: #009926; }

/* Literal.String.Regex */
.highlight .s1 {
  color: #d14; }

/* Literal.String.Single */
.highlight .ss {
  color: #990073; }

/* Literal.String.Symbol */
.highlight .bp {
  color: #999999; }

/* Name.Builtin.Pseudo */
.highlight .vc {
  color: #008080; }

/* Name.Variable.Class */
.highlight .vg {
  color: #008080; }

/* Name.Variable.Global */
.highlight .vi {
  color: #008080; }

/* Name.Variable.Instance */
.highlight .il {
  color: #009999; }

/* Literal.Number.Integer.Long */
body {
  color: #777; }

.pure-img-responsive {
  max-width: 100%;
  height: auto; }

/*
Add transition to containers so they can push in and out.
*/
#layout, #menu, .menu-link {
  transition: all 0.2s ease-out; }

/*
This is the parent `<div>` that contains the menu and the content area.
*/
#layout {
  position: relative;
  padding-left: 0; }

#layout.active #menu {
  left: 160px;
  width: 160px; }

#layout.active .menu-link {
  left: 160px; }

/*
The content `<div>` is where all your content goes.
*/
.content {
  margin: 0 auto;
  padding: 0 2em;
  max-width: 800px;
  margin-bottom: 50px;
  line-height: 1.6em; }

.header {
  margin: 0;
  color: #333;
  text-align: center;
  padding: 2.5em 2em 0;
  border-bottom: 1px solid #eee; }

.header h1 {
  margin: 0.2em 0;
  font-size: 3em;
  font-weight: 300; }

.header h2 {
  font-weight: 300;
  color: #ccc;
  padding: 0;
  margin-top: 0; }

.content-subhead {
  margin: 50px 0 20px 0;
  font-weight: 300;
  color: #888; }

/* --------------------------
 * Main Navigation Bar Styles
 * --------------------------
*/
/* Add transition to containers so they can push in and out */
#layout, #menu, .menu-link {
  transition: all 0.2s ease-out; }

#layout.active .menu-link {
  left: 160px; }

#menu {
  margin-left: -160px;
  /* "#menu" width */
  width: 160px;
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  z-index: 1000;
  /* so the menu or its navicon stays above all content */
  background: #191818;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch; }

#menu a {
  color: #999;
  border: none;
  white-space: normal;
  padding: 0.625em 1em; }

#menu .pure-menu-open {
  background: transparent;
  border: 0; }

#menu .pure-menu ul {
  border: none;
  background: transparent;
  display: block; }

#menu .pure-menu ul, #menu .pure-menu .menu-item-divided {
  border-top: 1px solid #333; }

#menu .pure-menu li a:hover, #menu .pure-menu li a:focus {
  background: #333; }

.menu-link {
  position: fixed;
  display: block;
  /* show this only on small screens */
  top: 0;
  left: 0;
  /* "#menu width" */
  background: #000;
  background: rgba(0, 0, 0, 0.7);
  font-size: 11px;
  /* change this value to increase/decrease button size */
  z-index: 10;
  width: 2em;
  height: 2em;
  padding: 1em; }

.menu-link:hover, .menu-link:focus {
  background: #000; }

.menu-link span {
  position: relative;
  display: block;
  margin-top: 0.9em; }

.menu-link span, .menu-link span:before, .menu-link span:after {
  background-color: #fff;
  width: 100%;
  height: 0.2em;
  transition: all 0.4s; }

.menu-link span:before, .menu-link span:after {
  position: absolute;
  top: -0.55em;
  content: " "; }

.menu-link span:after {
  top: 0.55em; }

.menu-link.active span {
  background: transparent; }

.menu-link.active span:before {
  -webkit-transform: rotate(45deg) translate(0.5em, 0.4em);
  -ms-transform: rotate(45deg) translate(0.5em, 0.4em);
  transform: rotate(45deg) translate(0.5em, 0.4em); }

.menu-link.active span:after {
  -webkit-transform: rotate(-45deg) translate(0.4em, -0.3em);
  -ms-transform: rotate(-45deg) translate(0.4em, -0.3em);
  transform: rotate(-45deg) translate(0.4em, -0.3em); }

#menu .pure-menu-heading {
  font-size: 125%;
  font-weight: 300;
  letter-spacing: 0.1em;
  color: #ddd;
  margin-top: 0;
  padding: 0.5em 0.8em;
  text-transform: uppercase; }

#menu .pure-menu-heading:hover, #menu .pure-menu-heading:focus {
  color: #fff; }

#menu .pure-menu-selected {
  background: #1f8dd6; }

#menu .pure-menu-selected a {
  color: #fff; }

#menu li.pure-menu-selected a:hover, #menu li.pure-menu-selected a:focus {
  background: none; }

/* -- Responsive Styles (Media Queries) ------------------------------------- */
/*
Hides the menu at `58em`, but modify this based on your app's needs.
*/
@media (min-width: 58em) {
  .header, .content {
    padding-left: 2em;
    padding-right: 2em; }
  #layout {
    padding-left: 160px;
    /* left col width "#menu" */
    left: 0; }
  #menu {
    left: 160px; }
  .menu-link {
    position: fixed;
    left: 160px;
    display: none; }
  #layout.active .menu-link {
    left: 160px; } }

@media (max-width: 58em) {
  /* Only apply this when the window is small. Otherwise, the following
  case results in extra padding on the left:
  * Make the window small.
  * Tap the menu to trigger the active state.
  * Make the window large again.
  */
  #layout.active {
    position: relative;
    left: 160px; } }

body {
  background: white; }
